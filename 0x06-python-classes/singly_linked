#!/usr/bin/python3

"""class Node
    Implements a singly_linked list"""

class Node:
    def __init__(self, data, next_node=None):
        self.data = data
        self.next_node = next_node

    @property
    def data(self):
        return (self.__data)

    @data.setter
    def data(self, value):
        if (type(value) is not int):
            raise TypeError("data must be an integer")
        else:
            self.__data = value
    
    @property
    def next_node(self):
        return (self.__next_node)

    @next_node.setter
    def next_node(self, value):
        if (type(value) == None or type(value) == Node):
            self.__next_node = value
        else:
            raise TypeErrror("next_node must be a Node object")

"""class Singly_linked_list:
        Implements a singly_linked_list"""

class SinglyLinkedList:
    def __init__(self, head):
        self.__head = head


